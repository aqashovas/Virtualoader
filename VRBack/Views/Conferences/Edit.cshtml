@model VRBack.Models.Conference

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" type="text/css" href="/Public/vendor/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="~/Public/css/main.css">


    <title>Edit</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <nav class="navbar navbar-light bg-light justify-content-between navbardash">
    <a class="navbar-brand">VIRTUAL LOADER PRO DASHBOARD</a>
    <form class="form-inline">
        <button class="btn btnpost my-2 my-sm-0" type="submit">
            <a href="@Url.Action("logout","login")">
                Exit
            </a>
        </button>
    </form>
</nav>
    <div class="container-fluid">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-group mt-4">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group row">
                    @Html.LabelFor(model => model.Link1, htmlAttributes: new { @class = "col-form-label col-md-2 formtext" })
                    <div class="col-md-10 col-sm-10">
                        @Html.EditorFor(model => model.Link1, new { htmlAttributes = new { @class = "form-control " } })
                        @Html.ValidationMessageFor(model => model.Link1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Link2, htmlAttributes: new { @class = "control-label col-md-2 formtext" })
                    <div class="col-md-10 col-sm-10">
                        @Html.EditorFor(model => model.Link2, new { htmlAttributes = new { @class = "form-control " } })
                        @Html.ValidationMessageFor(model => model.Link2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row textareasec">
                    @Html.LabelFor(model => model.Text1, htmlAttributes: new { @class = "control-label col-md-2 formtext" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Text1, htmlAttributes: new { @class = "form-control " })
                        @Html.ValidationMessageFor(model => model.Text1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group d-flex">
                    <div class="ml-auto">

                        <input type="submit" value="Save" class="btn btn-default btnpost" />
                    </div>
                </div>
            </div>
        }

        <div class="backlist d-flex">
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div> 
  
</body>
</html>
